8) Program to implement quick sort
#include <iostream.h>
#include <conio.h>
int i,j;
int partition(int arr[], int start, int end)
{
int pivot = arr[start];
int count = 0;
for (i = start + 1; i <= end; i++) {
if (arr[i] <= pivot)
count++;
}
int pivotIndex = start + count;
int temp = arr[pivotIndex];
arr[pivotIndex] = arr[start] ;
arr[start] = temp ;
i = start, j = end;
while (i < pivotIndex && j > pivotIndex) {
while (arr[i] <= pivot) {
i++;
}
while (arr[j] > pivot) {
j--;
}
if (i < pivotIndex && j > pivotIndex){
temp = arr[i];
arr[i]=arr[j];
arr[j]=temp;
}
}
return pivotIndex;
}
void quickSort(int arr[], int start, int end)
{
if (start >= end)
return;
int p = partition(arr, start, end);
quickSort(arr, start, p - 1);
quickSort(arr, p + 1, end);
}
void main()
{
clrscr();
int a[33],n;
cout<<"\nEnter limit:";
cin>>n;
cout<<"\nEnter array:";
for(i=0;i<n;i++)
cin>>a[i];
cout<<"\nArray in ascending order:";
quickSort(a, 0, n - 1);
for (i = 0; i < n; i++) {
cout << a[i] << " ";
}
getch();