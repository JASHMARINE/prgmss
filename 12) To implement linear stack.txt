12) To implement linear stack
#include<iostream.h>
#include<conio.h>
int ele;
class stack
{
int arr[3],top,max;
public:
stack(){ top = -1;
max = 3; }
void print();
void push(){
if( top == max-1 )
cout<<"\nStack full";
else
{
cout<<"\nEnter element: ";
cin>>ele;
top++;
arr[top]=ele;
cout<<"\nAfter push:";
print();
}
}
void pop()
{
if( top == -1 )
cout<<"\nUnable to perform pop ...stack empty";
else
{
top--;
cout<<"\nAfter pop:";
print();
}
}
}s;
void stack::print()
{
if( top == -1 )
cout<<"\n( Empty )";
else
{
cout<<"\nElements in stack :\n";
for(int i=top;i>=0;i--)
cout<<arr[i]<<" ";
}
}
void main()
{
char c;
int o;
do
{
clrscr();
cout<<"\n****MENU****";
cout<<"\n1)Push";
cout<<"\n2)Pop";
cout<<"\n3)View";
cout<<"\nEnter option===> ";
cin>>o;
switch(o)
{
case 1: s.push();
break;
case 2: s.pop();
break;
case 3: s.print();
break;
default: cout<<"\nInvalid option";
}
cout<<"\n\nDo you wish to continue (y/n):";
cin>>c;
}while(c=='y'||c=='Y');
getch();
}